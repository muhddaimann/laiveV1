LaiveV1/
â”œâ”€ .expo/
â”œâ”€ app/
â”‚  â”œâ”€ (sidebar)/
â”‚  â”‚  â”œâ”€ a/
â”‚  â”‚  â”‚  â”œâ”€ _layout.tsx
â”‚  â”‚  â”‚  â””â”€ index.tsx
â”‚  â”‚  â”œâ”€ b/
â”‚  â”‚  â”‚  â”œâ”€ _layout.tsx
â”‚  â”‚  â”‚  â””â”€ index.tsx
â”‚  â”‚  â””â”€ _layout.tsx
â”‚  â”œâ”€ _layout.tsx
â”‚  â””â”€ index.tsx
â”œâ”€ assets/
â”œâ”€ components/
â”‚  â”œâ”€ a/
â”‚  â”‚  â””â”€ header.tsx
â”‚  â”œâ”€ b/
â”‚  â”‚  â”œâ”€ demoModal.tsx
â”‚  â”‚  â””â”€ header.tsx
â”‚  â””â”€ sidebar.tsx
â”œâ”€ constants/
â”‚  â”œâ”€ color.ts
â”‚  â””â”€ theme.ts
â”œâ”€ contexts/
â”‚  â”œâ”€ demoContext.tsx
â”‚  â”œâ”€ sidebarContext.tsx
â”‚  â””â”€ themeContext.tsx
â”œâ”€ hooks/
â”‚  â””â”€ useDemo.tsx
â”œâ”€ lib/
â”œâ”€ utils/
â”‚  â”œâ”€ conversationConfig.ts
â”‚  â””â”€ wavRenderer.ts
â”œâ”€ .gitignore
â”œâ”€ app.json
â”œâ”€ package-lock.json
â”œâ”€ package.json
â”œâ”€ readme.md
â””â”€ tsconfig.json


Laive
â”œâ”€ LaiveDemo
â”‚  â”œâ”€ ðŸ”¹ MVP: Unified playground to explore Laive AI capabilities
â”‚  â”œâ”€ TopicSelector/
â”‚  â”‚  â””â”€ Choose a topic and start a real-time conversation with AI
â”‚  â””â”€ ToolRunner/
â”‚     â””â”€ Trigger tool calls using RAG to fetch relevant knowledge base data
â”‚
â”œâ”€ LaiveScreen
â”œâ”€ ðŸ”¹ MVP: AI-powered interview assistant (Customer Service focus)
â”œâ”€ PreScreen
â”‚  â”œâ”€ Configure the interview, Prepare
â”‚  â”œâ”€ LanguageSelector - Select special
â”‚  â””â”€ PersonaInput
â”‚
â”œâ”€ Interview
â”‚  â”œâ”€ AIConversation
â”‚  â”‚  â”œâ”€ Mic recording with VAD
â”‚  â”‚  â”œâ”€ RealtimeClient sends to GPT-4o
â”‚  â”‚  â”œâ”€ Whisper transcription
â”‚  â”‚  â””â”€ GPT responses with persona + follow-ups
â”‚  â”œâ”€ Waveform - Visualizes voice input reply timing
â”‚  â””â”€ ChatBubble - Display full conversation transcript (candidate + AI)
â”‚
â”œâ”€ Analyzer
â”‚  â”œâ”€ UsageTracker
â”‚  â”‚  â”œâ”€ Input tokens, Output tokens
â”‚  â”‚  â””â”€ Audio duration cost (Whisper)
â”‚  â”œâ”€ ScoreEngine
â”‚  â”‚  â”œâ”€ Language proficiency
â”‚  â”‚  â”œâ”€ Communication (clarity, empathy, tone)
â”‚  â”‚  â””â”€ confidenceAndClarity (calmness, reasoning)
â”‚  â”œâ”€ Scenario handling - Show AI-generated feedback for candidate performance
â”‚  â””â”€ AutoSummary - Show AI-generated feedback for candidate performance
â”‚
â”œâ”€ ReportScreen
â”‚  â”œâ”€ SummaryCard
â”‚  â”‚  â”œâ”€ Candidate performance score
â”‚  â”‚  â””â”€ Strengths & improvement suggestions
â”‚  â”œâ”€ CostBreakdown
â”‚  â”‚  â””â”€ Token + time cost of session (OpenAI pricing)
â”‚  â””â”€ ExportOptions
â”‚     â”œâ”€ PDF Export - Download full formatted interview report
â”‚     â””â”€ Copy Transcript - Copy full raw transcript to clipboard
â”‚
â”œâ”€ LaiveDocs
â”œâ”€ ðŸ”¹ MVP: Smart resume evaluation by role applied
â”œâ”€ Upload
â”‚  â”œâ”€ DocumentInput - Upload resume (PDF, image)
â”‚  â”œâ”€ OCRProcessor - Extract raw text via OCR / PDF parse
â”‚  â””â”€ TextCleaner - Normalize and sanitize extracted content
â”œâ”€ RoleSelector
â”‚  â”œâ”€ Select target role (e.g., Customer Service, Software Engineer)
â”‚  â””â”€ Load role-specific expectations and keyword
â”œâ”€ Evaluator
â”‚  â”œâ”€ FieldExtractor - Identify key fields (education, skills, experience)
â”‚  â”œâ”€ MatchEngine
â”‚  â”‚  â”œâ”€ Compare resume content to role requirements
â”‚  â”‚  â””â”€ Highlight missing or strong sections
â”‚  â””â”€ ScoreSummary
â”‚     â”œâ”€ Fit score
â”‚     â”œâ”€ Strengths and gaps
â”‚     â””â”€ AI-generated evaluation summary
â”œâ”€ Report
â”‚  â”œâ”€ Visual breakdown of match
â”‚  â””â”€ Recommendation for next steps or interview readiness



current task is to implement the ExportOptions PDF Export - Download full formatted interview report and Copy Transcript - Copy full raw transcript to clipboard. plan your strategy before proceed. proceed as long as you not using scrollview for interviewPage. start with turning             Take Interview Again button to be in independent full width component after reportColumn. the rows will contain retake interview, export pdf and copy Transcript

instead of createInterviewConfig evaluating both english and selected language, interviewPage should just test candidate with what language the candidate choose, no dynamic testing both english and selected. same as current english one, applied for other four languages. so sendUserMessageContent need to be updated too so that the AI be more focused. plan your strategy before proceed.

current task is to create another page specialized for the Talent acquisition, continuation of LaiveRecruit and LaiveScreen. since candidate done the resume checking and pre screening results, LaiveHire supposed to be a page to display it. imagine all those result tied to an ID (20250801C1). plan your strategy before proceed as long as still consistent as previous screen



LaiveRecruit
â”œâ”€ Persona - Interviewer
â”‚  â”œâ”€ Landed to UploadScreen
â”‚  â”œâ”€ Upload candidate resume (PDF or DOC)
â”‚  â”œâ”€ Auto extracted summary appears
â”‚  â”œâ”€ View candidate strengths, skills, job match
â”‚  â”œâ”€ See suggested questions to ask
â”‚  â”œâ”€ Add manual notes or adjustments
â”‚  â”œâ”€ Export candidate report or briefing sheet
â”‚
â”œâ”€ Persona - AI
â”‚  â”œâ”€ Resume gets parsed and profiled by system
â”‚  â”œâ”€ May be linked to actual interview session
â”‚  â”œâ”€ Receives summary or feedback (if allowed)


LaiveScreen
â”œâ”€ Persona - Candidate
â”‚  â”œâ”€ Landed to WelcomeScreen
â”‚  â”œâ”€ Candidate fills name and selects language they specialize in
â”‚  â”œâ”€ Taps Start â†’ navigates to PreparationScreen
â”‚  â”œâ”€ On PreparationScreen:
â”‚  â”‚   â”œâ”€ Candidate taps "I'm Ready" to continue
â”‚  â”‚   â””â”€ Or goes back to WelcomeScreen
â”‚  â”œâ”€ Lands on InterviewScreen
â”‚  â”‚   â”œâ”€ System auto-sends $name and $language to client to start session
â”‚  â”‚   â”œâ”€ AI begins conversation in selected language
â”‚  â”‚   â”œâ”€ If English is selected â†’ AI speaks only English
â”‚  â”‚   â”œâ”€ If another language is selected:
â”‚  â”‚   â”‚   â”œâ”€ AI allows some switching but evaluates it
â”‚  â”‚   â”‚   â””â”€ Using non-selected language affects scoring, though AI still understands
â”‚  â”‚   â””â”€ Session ends when candidate says "thank you" or manually ends
â”‚  â”œâ”€ Lands on AnalyzingScreen
â”‚  â”œâ”€ Lands on ReportScreen
â”‚  â””â”€ Candidate can export their report
â”‚
â”œâ”€ Persona - AI
â”‚  â”œâ”€ Receives $language in configuration
â”‚  â”œâ”€ Uses config to handle interview flow and persona behavior
â”‚  â”œâ”€ Evaluates candidate (e.g., language use, tone, clarity)
â”‚  â”œâ”€ Generates summary and usage cost
â”‚  â””â”€ Handles report export after session


Recruitment Flow
â”œâ”€ Candidate starts in LaiveRecruit
â”‚  â”œâ”€ Upload resume (PDF/DOC)
â”‚  â”œâ”€ System extracts summary, strengths, questions
â”‚  â”œâ”€ Candidate double check and ready for Pre-Screen
â”‚  â””â”€ App navigates to LaiveScreen with passed candidate data
â”‚
â”œâ”€ Step 2: LaiveScreen handles pre-screen interview
â”‚  â”œâ”€ Candidate lands in WelcomeScreen
â”‚  â”œâ”€ $name, $language, $candidateId passed from LaiveRecruit
â”‚  â”œâ”€ AI interview session starts and ends normally
â”‚  â””â”€ On finish â†’ generates report (with scores, summary, feedback)
â”‚
â”œâ”€ Step 3: Return result to LaiveRecruit
â”‚  â”œâ”€ On session end, LaiveScreen POSTs result to backend (e.g., /savePreScreenResult)
â”‚  â”œâ”€ Backend links result to original $candidateId or temp ID
â”‚  â”œâ”€ Interviewer returns to LaiveRecruit â†’ refreshed with updated report
â”‚  â””â”€ Interviewer can view updated profile, report, or export data


LaiveHire
â”œâ”€ Persona - TA
â”‚  â”œâ”€ Landed to PipelineScreen
â”‚  â”‚   â”œâ”€ View all candidates across stages (Applied, Pre-Screened, Interviewed, Offered)
â”‚  â”‚   â”œâ”€ Filter by job role, status, interviewer, date
â”‚  â”‚   â”œâ”€ Search candidate by name, tag, or ID
â”‚  â”œâ”€ Tap candidate â†’ CandidateDetailScreen
â”‚  â”‚   â”œâ”€ View resume, interview summary, scores
â”‚  â”‚   â”œâ”€ Add comments or action tags (e.g. Shortlist, Reject)
â”‚  â”‚   â”œâ”€ Assign next action (e.g. Send to Manager, Book Interview)
â”‚  â”œâ”€ Export reports for HR/Management
â”‚
â”œâ”€ Persona - System
â”‚  â”œâ”€ Integration from LaiveRecruit and LaiveScreen
â”‚  â”œâ”€ Updates candidate stage after each action
â”‚  â”œâ”€ Sends notifications to stakeholders (optional)


LaiveScreen
â”œâ”€ Persona - TA (Talent Acquisition)
â”‚  â”œâ”€ Assign candidate to PC/station
â”‚  â”œâ”€ LaiveScreen loads with Resume & Assessment tabs
â”‚  â”œâ”€ Result Tab locked until candidate session completes
â”‚  â”œâ”€ After session ends, TA unlocks result tabs with credentials
â”‚  â”œâ”€ TA can view:
â”‚  â”‚   â”œâ”€ Uploaded Resume and ResumeAI result
â”‚  â”‚   â””â”€ Assessment Report
â”‚  â”œâ”€ TA can export session data as CSV
â”œâ”€ Persona - Candidate
â”‚  â”œâ”€ Landed to Resume Tab
â”‚  â”œâ”€ Upload resume (PDF/Docx)
â”‚  â”œâ”€ Submit resume â†’ Resume tab locked
â”‚  â”œâ”€ Navigate to Assessment Tab
â”‚  â”œâ”€ Candidate fills:
â”‚  â”‚   â”œâ”€ Name
â”‚  â”‚   â””â”€ Language (used for entire conversation)
â”‚  â”œâ”€ Tap Start Assessment â†’ Landed to InterviewScreen
â”‚  â”œâ”€ Session begins with (AI)s welcome message in selected language
â”‚  â”œâ”€ Must speak in selected language
â”‚  â”œâ”€ AI understands other languages but evaluates based on selection
â”‚  â”œâ”€ Session ends by:
â”‚  â”‚   â”œâ”€ Auto-completion of flow (after finish asks all questions)
â”‚  â”‚   â””â”€ Candidate manually ending / saying "Thank you"
â”‚  â”œâ”€ Confirmation prompt to submit session
â”‚  â”œâ”€ Candidate clicks submit
â”œâ”€ Persona - AI
â”‚  â”œâ”€ Receives:
â”‚  â”‚   â”œâ”€ Candidate name
â”‚  â”‚   â””â”€ Selected language
â”‚  â”œâ”€ Loads language-specific configuration for session
â”‚  â”œâ”€ Starts interview in selected language
â”‚  â”œâ”€ Monitors:
â”‚  â”‚   â”œâ”€ Language consistency
â”‚  â”‚   â”œâ”€ Fluency
â”‚  â”‚   â”œâ”€ Clarity
â”‚  â”‚   â”œâ”€ Relevance of answers
â”‚  â”‚   â””â”€ Code-switching
â”‚  â”œâ”€ Understands other languages, but applies evaluation rules
â”‚  â”œâ”€ Triggers session end after flow completion or end signal
â”‚  â”œâ”€ Analyzes recording:
â”‚  â”‚   â”œâ”€ NLP and speech scoring
â”‚  â”‚   â”œâ”€ Behavioral analysis
â”‚  â”‚   â”œâ”€ Confidence and timing
â”‚  â”‚   â””â”€ Evaluation summary
â”‚  â”œâ”€ Generates report:
â”‚  â”‚   â”œâ”€ Summary
â”‚  â”‚   â”œâ”€ Evaluation metrics
â”‚  â”‚   â””â”€ Cost & insights
â”‚  â””â”€ Provides export-ready output in PDF/CSV/JSON

current task is to create another page specialized for the Talent acquisition, continuation of LaiveRecruit and LaiveScreen. since candidate done the resume checking and pre screening results, LaiveHire supposed to be a page to display it. imagine all those result tied to an ID (20250801C1). plan your strategy before proceed as long as still consistent as previous screen to e/index

20250801C1